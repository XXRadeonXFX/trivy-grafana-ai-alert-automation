version: '3.8'

services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana_dashboard
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SERVER_ROOT_URL=http://4.240.98.78:3000
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=smtp.gmail.com:587
      - GF_SMTP_USER=prince.beats01@gmail.com
      - GF_SMTP_PASSWORD=XXXXXXXXXXXXXX
      - GF_SMTP_FROM_ADDRESS=prince.beats01@gmail.com
      - GF_SMTP_FROM_NAME=Grafana Alerts
      - GF_SMTP_SKIP_VERIFY=true
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    networks:
      - monitoring_network

  alert-service:
    build:
      context: ./alertmanager
      dockerfile: Dockerfile
    container_name: alert-service
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # PostgreSQL settings
      PG_DB: ${PG_DB}
      PG_USER: ${PG_USER}
      PG_PASS: ${PG_PASS}
      PG_HOST: ${PG_HOST}
      PG_PORT: ${PG_PORT}

      # SMTP settings
      SMTP_FROM_EMAIL: ${SMTP_FROM_EMAIL}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      ALERT_TO_EMAILS: ${ALERT_TO_EMAILS}

      # Grafana Dashboard links
      GRAFANA_URL: ${GRAFANA_URL}
      BUILD_DASHBOARD_UID: ${BUILD_DASHBOARD_UID}

      # AI Keys
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      AI_API_KEY: ${AI_API_KEY}

      # API Secret
      WEBHOOK_API_SECRET: ${WEBHOOK_API_SECRET}
    networks:
      - monitoring_network
    depends_on:
      - grafana

volumes:
  grafana_data:

networks:
  monitoring_network:
    driver: bridge
